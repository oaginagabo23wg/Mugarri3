import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.io.*;

public class Lehioa extends JFrame {
    JLabel arg;
    ImageIcon irudi;
    JTextField textField;
    JButton button;
    JCheckBox checkBox;
    JComboBox<String> comboBox;

    public Lehioa() {
        String pasahitza = JOptionPane.showInputDialog("Input password", JOptionPane.OK_CANCEL_OPTION);
        if (pasahitza != null && pasahitza.equals("damocles")) {
            setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            setPreferredSize(new Dimension(650, 500));
            setLayout(new BorderLayout());

            JPanel ezker = new JPanel();
            ezker.setLayout(new BoxLayout(ezker, BoxLayout.Y_AXIS));
            add(ezker, BorderLayout.WEST);


            irudi = new ImageIcon(".\\irudiak\\azeria.jpg");
            arg = new JLabel();
            arg.setBounds(10, 80, 250, 300);
            ImageIcon ikono = new ImageIcon(irudi.getImage().getScaledInstance(arg.getWidth(), arg.getHeight(), Image.SCALE_DEFAULT));
            arg.setIcon(ikono);


            File irudiakKarp = new File(".\\irudiak\\");
            File[] irudiak= irudiakKarp.listFiles(new FilenameFilter() {
                @Override
                public boolean accept(File dir, String name) {
                    return name.toLowerCase().endsWith(".jpg");
                }
            });

            String[] irudiakNames = new String[irudiak.length];
            for (int i = 0; i < irudiak.length; i++) {
                irudiakNames[i] = irudiak[i].getName().replace(".jpg", "");
            }

            JPanel comBox = new JPanel();
            comboBox = new JComboBox<>(irudiakNames);
            comboBox.setSelectedIndex(0);
            comboBox.setPreferredSize(new Dimension(250,50));
            comBox.add(comboBox);
            comboBox.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    String pathImg = ".\\irudiak\\";
                    String irudia = pathImg.concat(comboBox.getSelectedItem().toString());
                    String jpg = irudia.concat(".jpg");
                    comboEntzule(jpg);
                }

                private void comboEntzule(String s) {
                    irudi = new ImageIcon(s);
                    ImageIcon ikono = new ImageIcon(irudi.getImage().getScaledInstance(arg.getWidth(), arg.getHeight(), Image.SCALE_DEFAULT));
                    arg.setIcon(ikono);
                }
            });

            ezker.add(comBox);
            ezker.add(arg);
            checkBox = new JCheckBox("Save your comment");
            ezker.add(checkBox);


            textField = new JTextField();
            JPanel textFieldPanel = new JPanel();
            JPanel hutsunea = new JPanel();
            hutsunea.setPreferredSize(new Dimension(100,360));
            textFieldPanel.add(hutsunea);
            textFieldPanel.add(textField);
            textField.setPreferredSize(new Dimension(220, 30)); // Establecer el tama√±o deseado para el JTextField
            add(textFieldPanel, BorderLayout.CENTER);

            JPanel save = new JPanel();
            button = new JButton("Save");
            button.setPreferredSize(new Dimension(70,40));
            add(save,BorderLayout.SOUTH);
            save.add(button);
            button.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    String pathFitx = ".\\fitxategiak\\";
                    String fitx = pathFitx.concat(comboBox.getSelectedItem().toString());
                    String txt = fitx.concat(".txt");
                    if (checkBox.isSelected()) {
                        try (FileWriter fw = new FileWriter(txt, true);
                             BufferedWriter bw = new BufferedWriter(fw);
                             PrintWriter out = new PrintWriter(bw);
                        ) {
                            out.println(textField.getText());
                        } catch (IOException ioe) {
                            ioe.printStackTrace();
                        }
                    }
                }
            });

            addWindowListener(new WindowAdapter() {
                @Override
                public void windowClosing(WindowEvent e) {
                    JOptionPane.showMessageDialog(null, "Agur", "Agur!", JOptionPane.INFORMATION_MESSAGE);
                }
            });
            pack();
            setVisible(true);
        } else {
            System.exit(0);
        }
    }

    public static void main(String[] args) {
        new Lehioa();
    }
}
